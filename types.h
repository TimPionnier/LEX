#include <stdbool.h>

/* parse tree */
struct TreeNode {
	struct TreeValue{
		union {
			int i;
			long double r;
			char *s;
      char c;
      bool b;
		} v;
		char *use;
	} val;
	int nodeIdentifier;
	struct TreeNode *first;
	struct TreeNode *second;
	struct TreeNode *third;
	struct TreeNode *fourth;
};
typedef struct TreeNode TREE_NODE;
typedef TREE_NODE *B_TREE;

enum PARSE_TREE_NODE_TYPE {FUNC_EXPR,ID_EXPR,CONSTANT_EXPR, INFERIOR, SUPERIOR, SUPERIOR_EQUAL, INFERIOR_EQUAL, NOT_EQUAL, EQUAL, ABS_FUNC, LOG_FUNC, EXP_FUNC, PROGRAM, DECLARATION, DECLARATOR_LIST, TYPE_SPECIFIER, DECLARATION_BLOCK, ID, ADDITION, CONSTANT, ASSIGNATION, SOUSTRACTION, MULTIPLICATION, DIVISION, INT_DIVISION, MODULO, PARENTHESIS, AND_OP, OR_OP, NOT_OP, OPPOSITE, STMT_LIST, STMT, COMMENT_BLOCK, STMT_BLOCK, IF_ELSE_STMT, WHILE_LOOP, FOR_LOOP,READ_STMT,WRITE_STMT,FUNC_STMT,STMT_BLOCK_RETURN,DECLARATION_LIST};
const char* labels[] = {"FUNC_EXPR","ID_EXPR","CONSTANT_EXPR","INFERIOR", "SUPERIOR", "SUPERIOR_EQUAL", "INFERIOR_EQUAL", "NOT_EQUAL", "EQUAL","ABS_FUNC", "LOG_FUNC", "EXP_FUNC","PROGRAM", "DECLARATION", "DECLARATOR_LIST", "TYPE_SPECIFIER", "DECLARATION_BLOCK", "ID", "ADDITION","CONSTANT", "ASSIGNATION","SOUSTRACTION", "MULTIPLICATION", "DIVISION", "INT_DIVISION", "MODULO", "PARENTHESIS", "AND_OP", "OR_OP", "NOT_OP", "OPPOSITE", "STMT_LIST", "STMT", "COMMENT_BLOCK", "STMT_BLOCK", "IF_ELSE_STMT", "WHILE_LOOP", "FOR_LOOP","READ_STMT","WRITE_STMT","FUNC_STMT","STMT_BLOCK_RETURN","DECLARATION_LIST"};